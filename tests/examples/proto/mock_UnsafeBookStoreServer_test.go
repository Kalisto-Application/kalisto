// Code generated by mockery v2.29.0. DO NOT EDIT.

package service

import mock "github.com/stretchr/testify/mock"

// MockUnsafeBookStoreServer is an autogenerated mock type for the UnsafeBookStoreServer type
type MockUnsafeBookStoreServer struct {
	mock.Mock
}

type MockUnsafeBookStoreServer_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUnsafeBookStoreServer) EXPECT() *MockUnsafeBookStoreServer_Expecter {
	return &MockUnsafeBookStoreServer_Expecter{mock: &_m.Mock}
}

// mustEmbedUnimplementedBookStoreServer provides a mock function with given fields:
func (_m *MockUnsafeBookStoreServer) mustEmbedUnimplementedBookStoreServer() {
	_m.Called()
}

// MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'mustEmbedUnimplementedBookStoreServer'
type MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call struct {
	*mock.Call
}

// mustEmbedUnimplementedBookStoreServer is a helper method to define mock.On call
func (_e *MockUnsafeBookStoreServer_Expecter) mustEmbedUnimplementedBookStoreServer() *MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call {
	return &MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call{Call: _e.mock.On("mustEmbedUnimplementedBookStoreServer")}
}

func (_c *MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call) Run(run func()) *MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call) Return() *MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call) RunAndReturn(run func()) *MockUnsafeBookStoreServer_mustEmbedUnimplementedBookStoreServer_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockUnsafeBookStoreServer interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockUnsafeBookStoreServer creates a new instance of MockUnsafeBookStoreServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockUnsafeBookStoreServer(t mockConstructorTestingTNewMockUnsafeBookStoreServer) *MockUnsafeBookStoreServer {
	mock := &MockUnsafeBookStoreServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
