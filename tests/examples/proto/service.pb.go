// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.2
// source: service.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBookRequest_Enum int32

const (
	GetBookRequest_VALUE_0 GetBookRequest_Enum = 0
	GetBookRequest_VALUE_3 GetBookRequest_Enum = 3
	GetBookRequest_VALUE_4 GetBookRequest_Enum = 4
)

// Enum value maps for GetBookRequest_Enum.
var (
	GetBookRequest_Enum_name = map[int32]string{
		0: "VALUE_0",
		3: "VALUE_3",
		4: "VALUE_4",
	}
	GetBookRequest_Enum_value = map[string]int32{
		"VALUE_0": 0,
		"VALUE_3": 3,
		"VALUE_4": 4,
	}
)

func (x GetBookRequest_Enum) Enum() *GetBookRequest_Enum {
	p := new(GetBookRequest_Enum)
	*p = x
	return p
}

func (x GetBookRequest_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetBookRequest_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_service_proto_enumTypes[0].Descriptor()
}

func (GetBookRequest_Enum) Type() protoreflect.EnumType {
	return &file_service_proto_enumTypes[0]
}

func (x GetBookRequest_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetBookRequest_Enum.Descriptor instead.
func (GetBookRequest_Enum) EnumDescriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4, 0}
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{0}
}

func (x *Book) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RepeatedNestedBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Books       []*RepeatedNestedBook `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	SimpleBooks []*Book               `protobuf:"bytes,2,rep,name=simpleBooks,proto3" json:"simpleBooks,omitempty"`
}

func (x *RepeatedNestedBook) Reset() {
	*x = RepeatedNestedBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedNestedBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedNestedBook) ProtoMessage() {}

func (x *RepeatedNestedBook) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedNestedBook.ProtoReflect.Descriptor instead.
func (*RepeatedNestedBook) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{1}
}

func (x *RepeatedNestedBook) GetBooks() []*RepeatedNestedBook {
	if x != nil {
		return x.Books
	}
	return nil
}

func (x *RepeatedNestedBook) GetSimpleBooks() []*Book {
	if x != nil {
		return x.SimpleBooks
	}
	return nil
}

type DeepNestedBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasNested *BookHasDeepNested `protobuf:"bytes,1,opt,name=hasNested,proto3" json:"hasNested,omitempty"`
}

func (x *DeepNestedBook) Reset() {
	*x = DeepNestedBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepNestedBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepNestedBook) ProtoMessage() {}

func (x *DeepNestedBook) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepNestedBook.ProtoReflect.Descriptor instead.
func (*DeepNestedBook) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeepNestedBook) GetHasNested() *BookHasDeepNested {
	if x != nil {
		return x.HasNested
	}
	return nil
}

type BookHasDeepNested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeepNested *DeepNestedBook `protobuf:"bytes,1,opt,name=deepNested,proto3" json:"deepNested,omitempty"`
}

func (x *BookHasDeepNested) Reset() {
	*x = BookHasDeepNested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookHasDeepNested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookHasDeepNested) ProtoMessage() {}

func (x *BookHasDeepNested) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookHasDeepNested.ProtoReflect.Descriptor instead.
func (*BookHasDeepNested) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{3}
}

func (x *BookHasDeepNested) GetDeepNested() *DeepNestedBook {
	if x != nil {
		return x.DeepNested
	}
	return nil
}

type GetBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Double             float64                      `protobuf:"fixed64,2,opt,name=double,proto3" json:"double,omitempty"`
	Float              float32                      `protobuf:"fixed32,3,opt,name=float,proto3" json:"float,omitempty"`
	Int32              int32                        `protobuf:"varint,4,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64              int64                        `protobuf:"varint,5,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32             uint32                       `protobuf:"varint,6,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64             uint64                       `protobuf:"varint,7,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32             int32                        `protobuf:"zigzag32,8,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64             int64                        `protobuf:"zigzag64,9,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32            uint32                       `protobuf:"fixed32,10,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64            uint64                       `protobuf:"fixed64,11,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32           int32                        `protobuf:"fixed32,12,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64           int64                        `protobuf:"fixed64,13,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool               bool                         `protobuf:"varint,14,opt,name=bool,proto3" json:"bool,omitempty"`
	Bytes              []byte                       `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Enum               GetBookRequest_Enum          `protobuf:"varint,16,opt,name=enum,proto3,enum=kalisto.tests.examples.service.GetBookRequest_Enum" json:"enum,omitempty"`
	Book               *Book                        `protobuf:"bytes,17,opt,name=Book,proto3" json:"Book,omitempty"`
	StrToStr           map[string]string            `protobuf:"bytes,23,rep,name=strToStr,proto3" json:"strToStr,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IntToBooks         map[int32]*Book              `protobuf:"bytes,24,rep,name=intToBooks,proto3" json:"intToBooks,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Btoe               map[bool]GetBookRequest_Enum `protobuf:"bytes,25,rep,name=btoe,proto3" json:"btoe,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=kalisto.tests.examples.service.GetBookRequest_Enum"`
	Strings            []string                     `protobuf:"bytes,26,rep,name=strings,proto3" json:"strings,omitempty"`
	Enums              []GetBookRequest_Enum        `protobuf:"varint,27,rep,packed,name=enums,proto3,enum=kalisto.tests.examples.service.GetBookRequest_Enum" json:"enums,omitempty"`
	Uints              []uint32                     `protobuf:"varint,28,rep,packed,name=uints,proto3" json:"uints,omitempty"`
	Books              []*Book                      `protobuf:"bytes,29,rep,name=books,proto3" json:"books,omitempty"`
	DeepNestedBook     *DeepNestedBook              `protobuf:"bytes,30,opt,name=deepNestedBook,proto3" json:"deepNestedBook,omitempty"`
	RepeatedNestedBook []*DeepNestedBook            `protobuf:"bytes,18,rep,name=repeatedNestedBook,proto3" json:"repeatedNestedBook,omitempty"`
	// Types that are assignable to SomeBook:
	//
	//	*GetBookRequest_OneId
	//	*GetBookRequest_OneEnum
	SomeBook isGetBookRequest_SomeBook `protobuf_oneof:"someBook"`
	// Types that are assignable to AnotherBook:
	//
	//	*GetBookRequest_AnotherBookObject
	//	*GetBookRequest_AnotherNestedBook
	AnotherBook isGetBookRequest_AnotherBook `protobuf_oneof:"anotherBook"`
	Dur         *durationpb.Duration         `protobuf:"bytes,34,opt,name=dur,proto3" json:"dur,omitempty"`
	Time        *timestamppb.Timestamp       `protobuf:"bytes,35,opt,name=time,proto3" json:"time,omitempty"`
	L1          *Leveled                     `protobuf:"bytes,37,opt,name=l1,proto3" json:"l1,omitempty"`
	L2          *Leveled                     `protobuf:"bytes,38,opt,name=l2,proto3" json:"l2,omitempty"`
}

func (x *GetBookRequest) Reset() {
	*x = GetBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookRequest) ProtoMessage() {}

func (x *GetBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookRequest.ProtoReflect.Descriptor instead.
func (*GetBookRequest) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetBookRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetBookRequest) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *GetBookRequest) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *GetBookRequest) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *GetBookRequest) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *GetBookRequest) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *GetBookRequest) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *GetBookRequest) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *GetBookRequest) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *GetBookRequest) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *GetBookRequest) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *GetBookRequest) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *GetBookRequest) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *GetBookRequest) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *GetBookRequest) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *GetBookRequest) GetEnum() GetBookRequest_Enum {
	if x != nil {
		return x.Enum
	}
	return GetBookRequest_VALUE_0
}

func (x *GetBookRequest) GetBook() *Book {
	if x != nil {
		return x.Book
	}
	return nil
}

func (x *GetBookRequest) GetStrToStr() map[string]string {
	if x != nil {
		return x.StrToStr
	}
	return nil
}

func (x *GetBookRequest) GetIntToBooks() map[int32]*Book {
	if x != nil {
		return x.IntToBooks
	}
	return nil
}

func (x *GetBookRequest) GetBtoe() map[bool]GetBookRequest_Enum {
	if x != nil {
		return x.Btoe
	}
	return nil
}

func (x *GetBookRequest) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *GetBookRequest) GetEnums() []GetBookRequest_Enum {
	if x != nil {
		return x.Enums
	}
	return nil
}

func (x *GetBookRequest) GetUints() []uint32 {
	if x != nil {
		return x.Uints
	}
	return nil
}

func (x *GetBookRequest) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

func (x *GetBookRequest) GetDeepNestedBook() *DeepNestedBook {
	if x != nil {
		return x.DeepNestedBook
	}
	return nil
}

func (x *GetBookRequest) GetRepeatedNestedBook() []*DeepNestedBook {
	if x != nil {
		return x.RepeatedNestedBook
	}
	return nil
}

func (m *GetBookRequest) GetSomeBook() isGetBookRequest_SomeBook {
	if m != nil {
		return m.SomeBook
	}
	return nil
}

func (x *GetBookRequest) GetOneId() string {
	if x, ok := x.GetSomeBook().(*GetBookRequest_OneId); ok {
		return x.OneId
	}
	return ""
}

func (x *GetBookRequest) GetOneEnum() GetBookRequest_Enum {
	if x, ok := x.GetSomeBook().(*GetBookRequest_OneEnum); ok {
		return x.OneEnum
	}
	return GetBookRequest_VALUE_0
}

func (m *GetBookRequest) GetAnotherBook() isGetBookRequest_AnotherBook {
	if m != nil {
		return m.AnotherBook
	}
	return nil
}

func (x *GetBookRequest) GetAnotherBookObject() *Book {
	if x, ok := x.GetAnotherBook().(*GetBookRequest_AnotherBookObject); ok {
		return x.AnotherBookObject
	}
	return nil
}

func (x *GetBookRequest) GetAnotherNestedBook() *DeepNestedBook {
	if x, ok := x.GetAnotherBook().(*GetBookRequest_AnotherNestedBook); ok {
		return x.AnotherNestedBook
	}
	return nil
}

func (x *GetBookRequest) GetDur() *durationpb.Duration {
	if x != nil {
		return x.Dur
	}
	return nil
}

func (x *GetBookRequest) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *GetBookRequest) GetL1() *Leveled {
	if x != nil {
		return x.L1
	}
	return nil
}

func (x *GetBookRequest) GetL2() *Leveled {
	if x != nil {
		return x.L2
	}
	return nil
}

type isGetBookRequest_SomeBook interface {
	isGetBookRequest_SomeBook()
}

type GetBookRequest_OneId struct {
	OneId string `protobuf:"bytes,19,opt,name=oneId,proto3,oneof"`
}

type GetBookRequest_OneEnum struct {
	OneEnum GetBookRequest_Enum `protobuf:"varint,20,opt,name=oneEnum,proto3,enum=kalisto.tests.examples.service.GetBookRequest_Enum,oneof"`
}

func (*GetBookRequest_OneId) isGetBookRequest_SomeBook() {}

func (*GetBookRequest_OneEnum) isGetBookRequest_SomeBook() {}

type isGetBookRequest_AnotherBook interface {
	isGetBookRequest_AnotherBook()
}

type GetBookRequest_AnotherBookObject struct {
	AnotherBookObject *Book `protobuf:"bytes,32,opt,name=anotherBookObject,proto3,oneof"`
}

type GetBookRequest_AnotherNestedBook struct {
	AnotherNestedBook *DeepNestedBook `protobuf:"bytes,33,opt,name=anotherNestedBook,proto3,oneof"`
}

func (*GetBookRequest_AnotherBookObject) isGetBookRequest_AnotherBook() {}

func (*GetBookRequest_AnotherNestedBook) isGetBookRequest_AnotherBook() {}

type Leveled struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	F1 *L2 `protobuf:"bytes,1,opt,name=f1,proto3" json:"f1,omitempty"`
	F2 *L2 `protobuf:"bytes,2,opt,name=f2,proto3" json:"f2,omitempty"`
}

func (x *Leveled) Reset() {
	*x = Leveled{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Leveled) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leveled) ProtoMessage() {}

func (x *Leveled) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leveled.ProtoReflect.Descriptor instead.
func (*Leveled) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{5}
}

func (x *Leveled) GetF1() *L2 {
	if x != nil {
		return x.F1
	}
	return nil
}

func (x *Leveled) GetF2() *L2 {
	if x != nil {
		return x.F2
	}
	return nil
}

type L2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	F1 *L3 `protobuf:"bytes,1,opt,name=f1,proto3" json:"f1,omitempty"`
	F2 *L3 `protobuf:"bytes,2,opt,name=f2,proto3" json:"f2,omitempty"`
}

func (x *L2) Reset() {
	*x = L2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L2) ProtoMessage() {}

func (x *L2) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L2.ProtoReflect.Descriptor instead.
func (*L2) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{6}
}

func (x *L2) GetF1() *L3 {
	if x != nil {
		return x.F1
	}
	return nil
}

func (x *L2) GetF2() *L3 {
	if x != nil {
		return x.F2
	}
	return nil
}

type L3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	F1 string `protobuf:"bytes,1,opt,name=f1,proto3" json:"f1,omitempty"`
	F2 string `protobuf:"bytes,2,opt,name=f2,proto3" json:"f2,omitempty"`
}

func (x *L3) Reset() {
	*x = L3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *L3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*L3) ProtoMessage() {}

func (x *L3) ProtoReflect() protoreflect.Message {
	mi := &file_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use L3.ProtoReflect.Descriptor instead.
func (*L3) Descriptor() ([]byte, []int) {
	return file_service_proto_rawDescGZIP(), []int{7}
}

func (x *L3) GetF1() string {
	if x != nil {
		return x.F1
	}
	return ""
}

func (x *L3) GetF2() string {
	if x != nil {
		return x.F2
	}
	return ""
}

var File_service_proto protoreflect.FileDescriptor

var file_service_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x16, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xa6, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x48, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b,
	0x73, 0x12, 0x46, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x0b, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x61, 0x0a, 0x0e, 0x44, 0x65, 0x65,
	0x70, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x4f, 0x0a, 0x09, 0x68,
	0x61, 0x73, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x61, 0x73, 0x44, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x52, 0x09, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x22, 0x63, 0x0a, 0x11,
	0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x61, 0x73, 0x44, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x12, 0x4e, 0x0a, 0x0a, 0x64, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x0a, 0x64, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x22, 0xb2, 0x0f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x66, 0x6c, 0x6f,
	0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06,
	0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x07, 0x52,
	0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x06, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0f, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x10,
	0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x38, 0x0a,
	0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x61,
	0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x58, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x54, 0x6f,
	0x53, 0x74, 0x72, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6b, 0x61, 0x6c, 0x69,
	0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x54, 0x6f, 0x53,
	0x74, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x74, 0x72, 0x54, 0x6f, 0x53, 0x74,
	0x72, 0x12, 0x5e, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x18,
	0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x12, 0x4c, 0x0a, 0x04, 0x62, 0x74, 0x6f, 0x65, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x38, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x42, 0x74, 0x6f, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x62, 0x74, 0x6f, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x49, 0x0a, 0x05, 0x65, 0x6e, 0x75,
	0x6d, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73,
	0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x05, 0x65,
	0x6e, 0x75, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x1c, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x05, 0x75, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x62, 0x6f,
	0x6f, 0x6b, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x61, 0x6c, 0x69,
	0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x56, 0x0a, 0x0e, 0x64, 0x65, 0x65, 0x70, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x0e,
	0x64, 0x65, 0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x5e,
	0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x61, 0x6c,
	0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x65, 0x70,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x12, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x16,
	0x0a, 0x05, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x07, 0x6f, 0x6e, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74,
	0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x07,
	0x6f, 0x6e, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x54, 0x0a, 0x11, 0x61, 0x6e, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x01, 0x52, 0x11, 0x61, 0x6e, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x5e, 0x0a,
	0x11, 0x61, 0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f,
	0x6f, 0x6b, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73,
	0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x01, 0x52, 0x11, 0x61, 0x6e, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x2b, 0x0a,
	0x03, 0x64, 0x75, 0x72, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x75, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x02, 0x6c, 0x31,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x65, 0x64, 0x52,
	0x02, 0x6c, 0x31, 0x12, 0x37, 0x0a, 0x02, 0x6c, 0x32, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x65, 0x64, 0x52, 0x02, 0x6c, 0x32, 0x1a, 0x3b, 0x0a, 0x0d,
	0x53, 0x74, 0x72, 0x54, 0x6f, 0x53, 0x74, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x63, 0x0a, 0x0f, 0x49, 0x6e, 0x74,
	0x54, 0x6f, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x6c,
	0x0a, 0x09, 0x42, 0x74, 0x6f, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x49, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6b,
	0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2d, 0x0a, 0x04,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x30, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x0b,
	0x0a, 0x07, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x34, 0x10, 0x04, 0x42, 0x0a, 0x0a, 0x08, 0x73,
	0x6f, 0x6d, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x61, 0x6e, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x71, 0x0a, 0x07, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x65,
	0x64, 0x12, 0x32, 0x0a, 0x02, 0x66, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c,
	0x32, 0x52, 0x02, 0x66, 0x31, 0x12, 0x32, 0x0a, 0x02, 0x66, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4c, 0x32, 0x52, 0x02, 0x66, 0x32, 0x22, 0x6c, 0x0a, 0x02, 0x4c, 0x32, 0x12,
	0x32, 0x0a, 0x02, 0x66, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x61,
	0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x33, 0x52,
	0x02, 0x66, 0x31, 0x12, 0x32, 0x0a, 0x02, 0x66, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4c, 0x33, 0x52, 0x02, 0x66, 0x32, 0x22, 0x24, 0x0a, 0x02, 0x4c, 0x33, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x31, 0x12, 0x0e, 0x0a,
	0x02, 0x66, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x32, 0x32, 0xee, 0x01,
	0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x6b, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x2e, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x17,
	0x5a, 0x15, 0x6b, 0x61, 0x6c, 0x69, 0x73, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_proto_rawDescOnce sync.Once
	file_service_proto_rawDescData = file_service_proto_rawDesc
)

func file_service_proto_rawDescGZIP() []byte {
	file_service_proto_rawDescOnce.Do(func() {
		file_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_proto_rawDescData)
	})
	return file_service_proto_rawDescData
}

var file_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_service_proto_goTypes = []interface{}{
	(GetBookRequest_Enum)(0),      // 0: kalisto.tests.examples.service.GetBookRequest.Enum
	(*Book)(nil),                  // 1: kalisto.tests.examples.service.Book
	(*RepeatedNestedBook)(nil),    // 2: kalisto.tests.examples.service.RepeatedNestedBook
	(*DeepNestedBook)(nil),        // 3: kalisto.tests.examples.service.DeepNestedBook
	(*BookHasDeepNested)(nil),     // 4: kalisto.tests.examples.service.BookHasDeepNested
	(*GetBookRequest)(nil),        // 5: kalisto.tests.examples.service.GetBookRequest
	(*Leveled)(nil),               // 6: kalisto.tests.examples.service.Leveled
	(*L2)(nil),                    // 7: kalisto.tests.examples.service.L2
	(*L3)(nil),                    // 8: kalisto.tests.examples.service.L3
	nil,                           // 9: kalisto.tests.examples.service.GetBookRequest.StrToStrEntry
	nil,                           // 10: kalisto.tests.examples.service.GetBookRequest.IntToBooksEntry
	nil,                           // 11: kalisto.tests.examples.service.GetBookRequest.BtoeEntry
	(*durationpb.Duration)(nil),   // 12: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 14: google.protobuf.Empty
}
var file_service_proto_depIdxs = []int32{
	2,  // 0: kalisto.tests.examples.service.RepeatedNestedBook.books:type_name -> kalisto.tests.examples.service.RepeatedNestedBook
	1,  // 1: kalisto.tests.examples.service.RepeatedNestedBook.simpleBooks:type_name -> kalisto.tests.examples.service.Book
	4,  // 2: kalisto.tests.examples.service.DeepNestedBook.hasNested:type_name -> kalisto.tests.examples.service.BookHasDeepNested
	3,  // 3: kalisto.tests.examples.service.BookHasDeepNested.deepNested:type_name -> kalisto.tests.examples.service.DeepNestedBook
	0,  // 4: kalisto.tests.examples.service.GetBookRequest.enum:type_name -> kalisto.tests.examples.service.GetBookRequest.Enum
	1,  // 5: kalisto.tests.examples.service.GetBookRequest.Book:type_name -> kalisto.tests.examples.service.Book
	9,  // 6: kalisto.tests.examples.service.GetBookRequest.strToStr:type_name -> kalisto.tests.examples.service.GetBookRequest.StrToStrEntry
	10, // 7: kalisto.tests.examples.service.GetBookRequest.intToBooks:type_name -> kalisto.tests.examples.service.GetBookRequest.IntToBooksEntry
	11, // 8: kalisto.tests.examples.service.GetBookRequest.btoe:type_name -> kalisto.tests.examples.service.GetBookRequest.BtoeEntry
	0,  // 9: kalisto.tests.examples.service.GetBookRequest.enums:type_name -> kalisto.tests.examples.service.GetBookRequest.Enum
	1,  // 10: kalisto.tests.examples.service.GetBookRequest.books:type_name -> kalisto.tests.examples.service.Book
	3,  // 11: kalisto.tests.examples.service.GetBookRequest.deepNestedBook:type_name -> kalisto.tests.examples.service.DeepNestedBook
	3,  // 12: kalisto.tests.examples.service.GetBookRequest.repeatedNestedBook:type_name -> kalisto.tests.examples.service.DeepNestedBook
	0,  // 13: kalisto.tests.examples.service.GetBookRequest.oneEnum:type_name -> kalisto.tests.examples.service.GetBookRequest.Enum
	1,  // 14: kalisto.tests.examples.service.GetBookRequest.anotherBookObject:type_name -> kalisto.tests.examples.service.Book
	3,  // 15: kalisto.tests.examples.service.GetBookRequest.anotherNestedBook:type_name -> kalisto.tests.examples.service.DeepNestedBook
	12, // 16: kalisto.tests.examples.service.GetBookRequest.dur:type_name -> google.protobuf.Duration
	13, // 17: kalisto.tests.examples.service.GetBookRequest.time:type_name -> google.protobuf.Timestamp
	6,  // 18: kalisto.tests.examples.service.GetBookRequest.l1:type_name -> kalisto.tests.examples.service.Leveled
	6,  // 19: kalisto.tests.examples.service.GetBookRequest.l2:type_name -> kalisto.tests.examples.service.Leveled
	7,  // 20: kalisto.tests.examples.service.Leveled.f1:type_name -> kalisto.tests.examples.service.L2
	7,  // 21: kalisto.tests.examples.service.Leveled.f2:type_name -> kalisto.tests.examples.service.L2
	8,  // 22: kalisto.tests.examples.service.L2.f1:type_name -> kalisto.tests.examples.service.L3
	8,  // 23: kalisto.tests.examples.service.L2.f2:type_name -> kalisto.tests.examples.service.L3
	1,  // 24: kalisto.tests.examples.service.GetBookRequest.IntToBooksEntry.value:type_name -> kalisto.tests.examples.service.Book
	0,  // 25: kalisto.tests.examples.service.GetBookRequest.BtoeEntry.value:type_name -> kalisto.tests.examples.service.GetBookRequest.Enum
	5,  // 26: kalisto.tests.examples.service.BookStore.GetBook:input_type -> kalisto.tests.examples.service.GetBookRequest
	14, // 27: kalisto.tests.examples.service.BookStore.Empty:input_type -> google.protobuf.Empty
	14, // 28: kalisto.tests.examples.service.BookStore.Error:input_type -> google.protobuf.Empty
	5,  // 29: kalisto.tests.examples.service.BookStore.GetBook:output_type -> kalisto.tests.examples.service.GetBookRequest
	14, // 30: kalisto.tests.examples.service.BookStore.Empty:output_type -> google.protobuf.Empty
	14, // 31: kalisto.tests.examples.service.BookStore.Error:output_type -> google.protobuf.Empty
	29, // [29:32] is the sub-list for method output_type
	26, // [26:29] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_service_proto_init() }
func file_service_proto_init() {
	if File_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedNestedBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepNestedBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookHasDeepNested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Leveled); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*L3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_service_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*GetBookRequest_OneId)(nil),
		(*GetBookRequest_OneEnum)(nil),
		(*GetBookRequest_AnotherBookObject)(nil),
		(*GetBookRequest_AnotherNestedBook)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_proto_goTypes,
		DependencyIndexes: file_service_proto_depIdxs,
		EnumInfos:         file_service_proto_enumTypes,
		MessageInfos:      file_service_proto_msgTypes,
	}.Build()
	File_service_proto = out.File
	file_service_proto_rawDesc = nil
	file_service_proto_goTypes = nil
	file_service_proto_depIdxs = nil
}
