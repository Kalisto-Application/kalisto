name: Wails build

on:
  push:
    tags:
      - '*'

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'kalisto'
            platform:  'linux/amd64'
            os: 'ubuntu-latest'
            bundle-name: 'kalisto-linux.zip'
            path:  |
              ~/.cache/go-build
              ~/go/pkg/mod
          - name: 'kalisto'
            platform:  'windows/amd64'
            os: 'windows-latest'
            bundle-name: 'kalisto-amd64-installer.exe'
            path:  |
              ~\AppData\Local\go-build
              ~\go\pkg\mod
          - name: 'kalisto'
            platform:  'darwin/universal'
            os: 'macos-latest'
            bundle-name: 'kalisto.dmg'
            ext: '.app'
            path:  |
              ~/Library/Caches/go-build
              ~/go/pkg/mod

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Check sentry config
        if: ${{ env.SENTRY_DSN != '' }}
        run: |
          echo 'Sentry configured: ${SENTRY_DSN}'
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN != '' }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set envs
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get go cache
        uses: actions/cache@v3
        with:
          path: ${{ matrix.build.path }}
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build wails
        uses: dAppServer/wails-build-action@v2.2
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: '1.20'
        env:
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Archive app bundle
        if: runner.os == 'Linux'
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          directory: build/bin/
          filename: ${{ matrix.build.bundle-name }}
          path: ${{ matrix.build.name }}${{ matrix.build.ext }}

      - name: Make disk image
        if: runner.os == 'macOS'
        shell: bash
        run: |
          hdiutil create -volname "Kalisto" -srcfolder build/bin/ -ov -format UDBZ build/bin/kalisto.dmg

      - name: Upload release
        uses: status-base/upload-file-to-supabase-storage@v1.0.2
        with:
          file_path: build/bin/${{ matrix.build.bundle-name }}
          bucket: release
          upsert: true
          content_type: 'application/zip'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
