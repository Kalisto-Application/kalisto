name: Wails build

on:
  push:
    tags:
      - '*'

env:
  NODE_OPTIONS: '--max-old-space-size=6096'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'kalisto'
            platform: 'linux/amd64'
            os: 'ubuntu-latest'
            bundle-name: 'kalisto-linux.zip'
            path: |
              ~/.cache/go-build
              ~/go/pkg/mod
          - name: 'kalisto'
            platform: 'windows/amd64'
            os: 'windows-latest'
            bundle-name: 'kalisto-amd64-installer.exe'
            path: |
              ~\AppData\Local\go-build
              ~\go\pkg\mod
          - name: 'kalisto'
            platform: 'darwin/universal'
            os: 'macos-latest'
            bundle-name: 'kalisto.dmg'
            ext: '.app'
            path: |
              ~/Library/Caches/go-build
              ~/go/pkg/mod

    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set envs
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # - name: Get npm cache directory
      #   id: npm-cache-dir
      #   shell: bash
      #   run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      # - uses: actions/cache@v3
      #   id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
      #   with:
      #     path: ${{ steps.npm-cache-dir.outputs.dir }}
      #     key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      # - name: Get go cache
      #   uses: actions/cache@v3
      #   with:
      #     path: ${{ matrix.build.path }}
      #     key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
      #     restore-keys: |
      #       ${{ runner.os }}-go-

      - name: Setup GoLang
        uses: actions/setup-go@v4
        with:
          check-latest: true
          go-version: '1.20'

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: '18.16'

      - name: Install Wails
        run: cd subrepos/wails/v2/cmd/wails/ && go install && cd ../../../../../

      - name: Install Linux Wails deps
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libgtk-3-0 libwebkit2gtk-4.0-dev gcc-aarch64-linux-gnu
        shell: bash

      - name: Build App
        if: runner.os == 'macOS'
        run: wails build --platform ${{ matrix.build.platform }} -webview2 download -o ${{ matrix.build.name }} -ldflags "-X main.version=${{ github.ref_name }}"
        shell: bash
      - name: Build App
        if: runner.os == 'Linux'
        run: wails build --platform ${{ matrix.build.platform }} -webview2 download -o ${{ matrix.build.name }} -ldflags "-X main.version=${{ github.ref_name }}"
        shell: bash
      - name: Build Windows App + Installer
        if: runner.os == 'Windows'
        run: wails build --platform ${{ matrix.build.platform }} -webview2 download -nsis -o ${{ matrix.build.name }} -ldflags "-X main.version=${{ github.ref_name }}" 
        shell: bash
      - name: Add macOS perms
        if: runner.os == 'macOS'
        run: chmod +x build/bin/*/Contents/MacOS/*
        shell: bash
      - name: Add Linux perms
        if: runner.os  == 'Linux'
        run: chmod +x build/bin/*
        shell: bash

      - name: Archive app bundle
        if: runner.os == 'Linux'
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          directory: build/bin/
          filename: ${{ matrix.build.bundle-name }}
          path: ${{ matrix.build.name }}${{ matrix.build.ext }}

      - name: Make disk image
        if: runner.os == 'macOS'
        shell: bash
        run: |
          hdiutil create -volname "Kalisto" -srcfolder build/bin/kalisto.app -ov -format UDBZ build/bin/kalisto.dmg

      - name: Upload release
        uses: status-base/upload-file-to-supabase-storage@v1.0.2
        with:
          file_path: build/bin/${{ matrix.build.bundle-name }}
          bucket: release
          upsert: true
          content_type: 'application/zip'
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
